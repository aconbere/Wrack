var Wrack = (function () {
  var api = { sharedProperties: {}
            , HOST: '<%= host %>'
            , PORT: <%= port %>
            , SCHEME: (("https:"==document.location.protocol)?"https:":"http:")
            , TOKEN: "xyz"
            }
  api.register = function (name, data) {
    api.sharedProperties.name = data;
  }

  api.identify = function (id) {
    api.register("distinct_id", id);
  }

  api.track = function (ev, properties) {
    properties = properties || {};

    var event = { name: ev
                , properties: api.merge(properties, api.sharedProperties)
                };

   
    url = [api.SCHEME, '//', api.HOST, ":", api.PORT, "/track"].join("");
    api.sendRequest(url, {'data': encodeURIComponent(JSON.stringify(event))});
  };

  api.sendRequest = function (path, data) {
    var uri = [path, '?', api.buildQuery(data)].join("");
    var d = document.createElement("script");
    d.setAttribute("src", uri);
    d.setAttribute("async", true);
    d.setAttribute("type", "text/javascript");
    var e = document.getElementsByTagName("head")[0] || document.documentElement;
    e.insertBefore(d, e.firstChild)
  };

  api.buildQuery = function (data) {
    pairs = []
    for (k in data) {
      pairs.push(encodeURIComponent(k) + '=' + encodeURIComponent(data[k]));
    }
    return pairs.join("&");
  };

  api.merge = function (target, source) {
    for (var k in source) {
      if (source.hasOwnProperty(k)) {
        target[k] = source[k];
      }
    }
    return target;
  };

  return api;
})();
